@model ElectricianModel
@{
    Layout = "_MasterLayout";
}


<h4 class="py-3 mb-4"><span class="text-muted fw-light">Forms /</span> Electrician</h4>

<!-- Basic Layout -->
<div class="row">
    <div class="col-xl">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Register / Update Electrician</h5>
                @* <small class="text-muted float-end">Default label</small> *@
            </div>
            <div class="card-body">
                <form>
                    <div class="row mb-2">
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="FirstName" class="col-form-label">First Name</label>
                                <input type="text" class="form-control" asp-for="FirstName" placeholder="First Name">
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="MiddleName" class="col-form-label">Middle Name</label>
                                <input type="text" class="form-control" asp-for="MiddleName" placeholder="Middle Name">
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="LastName" class="col-form-label">Last Name</label>
                                <input type="text" class="form-control" asp-for="LastName" placeholder="Last Name">
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="StateId" class="col-form-label">Select State</label>
                                <select class="form-control selectpicker" asp-for=StateId asp-items="@Model.StateDropDown">
                                    <option>Choose...</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="CityId" class="col-form-label">Select City</label>
                                <select class="form-control selectpicker" asp-for="CityId">
                                    <option value="0">Choose State First</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12">
                            <div class="form-group">
                                <label asp-for="LivingAddress" class="col-form-label">Living Address</label>
                                <input type="text" class="form-control" asp-for="LivingAddress" placeholder="Enter Living Address In Breif">
                            </div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-md-3 col-sm-12">
                            <div class="form-group">
                                <label asp-for="MobileNumber" class="col-form-label">Mobile Number</label>
                                <input type="number" class="form-control" asp-for="MobileNumber" placeholder="Enter Mobile Number">
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <div class="form-group">
                                <label asp-for="AlternateMobileNumber" class="col-form-label">Alternate Number</label>
                                <input type="number" class="form-control" asp-for="AlternateMobileNumber" placeholder="Enter Alternate Mobile Number">
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <div class="form-group">
                                <label asp-for="EmailAddress" class="col-form-label">Email</label>
                                <input type="email" class="form-control" asp-for="EmailAddress" placeholder="Enter Email Address">
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12">
                            <div class="form-group">
                                <label asp-for="ZipCode" class="col-form-label">Zip Code</label>
                                <input type="text" class="form-control" asp-for="ZipCode" placeholder="Enter Zip Code">
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-xl-12" style="text-align:right;">
                            <button type="reset" class="btn btn-secondary">
                                Reset
                            </button>
                            <button type="button" id="btnRegisterElectrician" name="submit" class="btn btn-primary">
                                Register
                            </button>
                            <button class="btn btn-primary hide-element" id="ldrRegisterElectrician" role="status">
                                <span class="spinner-border spinner-border-sm"></span>&nbsp;&nbsp;Processing
                            </button>
                        </div>  
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Table start -->
<div class="card  mt-2">
    <h5 class="card-header">Electrician List</h5>
    <div class="card-body p-3">
        <div class="table-responsive  text-nowrap">
            <table id="tblElectrician" class="table table-striped ">
                <thead>
                    <tr>
                        <th>Action</th>
                        <th>Status</th>
                        <th>Mobile Number</th>
                        <th>Alternate Number</th>
                        <th>Email Address</th>
                        <th>Zip Code</th>
                        <th>Address</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<!-- Table ends -->

<script>
    $(document).ready(() => {

        jQuery.noConflict();
        
        $('#tblElectrician').DataTable({
            "processing": true,
            "serverSide": true,
            "ordering": false,
            "bLengthChange": false,
            "ajax": {
                'url': '@Url.Action("GetElectricians", "Electrician")',
                'type': 'POST',
                'data': function (data) {
                    return data;
                },
                "dataSrc": function (json) {

                    if (!json.data && json.data.length == 0) {
                        return [];
                    }

                    for (let i = 0; i < json.data.length; i++) {
                       
                        json.data[i]["electricianName"] = `${json.data[i]["firstName"] ?? ""} ${json.data[i]["middleName"] ?? ""} ${json.data[i]["lastName"] ?? ""}`;
                        
                        json.data[i]["livingAddress"] = `${json.data[i]["livingAddress"] ?? ""} ${json.data[i]["CityName"] ?? ""} ${json.data[i]["stateName"] ?? ""}`;
                       

                        switch (json.data[i]["isActive"]) {

                            case  null:
                            case true:
                                iconColor = `danger`;
                                iconCLass = `bx-trash`;
                                toolTipMessage = `Disable ${json.data[i]["firstName"]}.`;
                                method = `deleteElectrician(this)`;
                                break;

                            case false: 
                                iconColor = `primary`;
                                iconCLass = `bx-archive-out`;
                                toolTipMessage = `Restore ${json.data[i]["firstName"]}.`;
                                method = `restoreElectrician(this)`;
                                break;

                        }

                        json.data[i]["action"] = `
                                                    <button
                                                            type="button"
                                                            value="${json.data[i]["id"]}"
                                                            onclick="${method}"
                                                            class="btn btn-sm bg-label-${iconColor}"
                                                            data-bs-toggle="tooltip"
                                                            data-bs-offset="0,4"
                                                            data-bs-placement="top"
                                                            data-bs-html="true"
                                                            title="<span>${toolTipMessage}</span>"
                                                            >
                                                            <i class='bx ${iconCLass}'></i>
                                                    </button>
                                                   
                                                    <button 
                                                            type="button"
                                                            value="${json.data[i]["id"]}"
                                                            onclick="viewElectrcian(${json.data[i]["id"]})"
                                                            class="btn btn-sm bg-label-info"
                                                            data-bs-toggle="tooltip"
                                                            data-bs-offset="0,4"
                                                            data-bs-placement="top"
                                                            data-bs-html="true"
                                                            title="<span>Update Information.</span>"
                                                            >
                                                        <i class='bx bxs-edit' ></i>
                                                    </button>
                        `;

                    }
                    return json.data;
                },
            },
            'searching': false,
            "columns": [
                { "data": "action" },
                { "data": "electricianName" },
                { "data": "mobileNumber" },
                { "data": "alternateMobileNumber" },
                { "data": "emailAddress" },
                { "data": "zipCode" },
                { "data": "livingAddress" }
            ],
            "drawCallback":function(setting){

                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                    new bootstrap.Tooltip(tooltipTriggerEl);
                });

            }
        });

    });

    // Fetch cities state wise.
    $(`#@Html.IdFor(model => model.StateId)`).on(`change`, async () => {

        let stateId = $(`#@Html.IdFor(model => model.StateId)`).val();
        let cityData = await getData({ controller: "City", endPoint: "GetCityByState", parameter: "stateId", parameterValue: stateId, retriveDataById: true });
        let dd = await fetchDropDown({ dataArray: cityData.data, dropDownId: "CityId" });

    });

    // Register new electrician
    $(`#btnRegisterElectrician`).click(async () => {

        let electricianObject = {
            '@Html.NameFor(model => model.FirstName)': $('#@Html.IdFor(model => model.FirstName)').val(),
            '@Html.NameFor(model => model.MiddleName)': $('#@Html.IdFor(model => model.MiddleName)').val(),
            '@Html.NameFor(model => model.LastName)': $('#@Html.IdFor(model => model.LastName)').val(),
            '@Html.NameFor(model => model.StateId)': $('#@Html.IdFor(model => model.StateId)').val(),
            '@Html.NameFor(model => model.CityId)': $('#@Html.IdFor(model => model.CityId)').val(),
            '@Html.NameFor(model => model.LivingAddress)': $('#@Html.IdFor(model => model.LivingAddress)').val(),
            '@Html.NameFor(model => model.MobileNumber)': $('#@Html.IdFor(model => model.MobileNumber)').val(),
            '@Html.NameFor(model => model.AlternateMobileNumber)': $('#@Html.IdFor(model => model.AlternateMobileNumber)').val(),
            '@Html.NameFor(model => model.EmailAddress)': $('#@Html.IdFor(model => model.EmailAddress)').val(),
            '@Html.NameFor(model => model.ZipCode)': $('#@Html.IdFor(model => model.ZipCode)').val()
        };

        await showHideLoader({ elementIdForShow: "ldrRegisterElectrician", elementIdForHide: "btnRegisterElectrician" });

        let response = await postOrPutData({ type: "POST", controller: "Electrician", endPoint: "RegisterElectrician", data: electricianObject });
        
        await showHideLoader({ elementIdForShow: "btnRegisterElectrician", elementIdForHide: "ldrRegisterElectrician" });

        toggleToast({ bg: "success", title: "Electrician", message: response.message });

        await reloadDataTable(`tblElectrician`);

    });

    // Delete electrician
    const deleteElectrician = async (currentElement) => {

        let id = $(currentElement).attr("value");

        await showHideActionLoader({ element: currentElement, color: "danger" });

        let response = await deleteData({ primaryKey: id, controller: "Electrician", endPoint: "DeleteElectrician" });

        toggleToast({ bg : "danger", title : "Electrician", message : response.message });

        await  reloadDataTable(`tblElectrician`);

    }
    
    // Restore deleted electrcian 
    const restoreElectrician = async (currentElement) => {

        let id = $(currentElement).attr("value");

        await showHideActionLoader({ element: currentElement, color: "primary" });

        let response = await deleteData({ primaryKey: id, controller: "Electrician", endPoint: "RestoreElectrician" });

        toggleToast({ bg: "success", title: "Electrician", message: response.message });

        reloadDataTable(`tblElectrician`);

    }

    // View electrician details 
    const viewElectrcian= async (id) => {

        toggleToast({ bg: "info", title: "Electrician", message: "Functionality not created yet." });

    }
</script>