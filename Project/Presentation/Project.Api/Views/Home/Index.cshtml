@* @model SignalRDemo.Models.Notification

<h1>Customer</h1>

<div class="row">
    <div class="col-md-4">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="text" id="offset" class="form-control" />
        <div class="form-group">
            <label asp-for="Id" class="control-label"></label>
            <input asp-for="Id" class="form-control" />
            <span asp-validation-for="Id" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="OrderId" class="control-label"></label>
            <input asp-for="OrderId" class="form-control" />
            <span asp-validation-for="OrderId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BidAmount" class="control-label"></label>
            <input asp-for="BidAmount" class="form-control" />
            <span asp-validation-for="BidAmount" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="SLA" class="control-label"></label>
            <input asp-for="SLA" class="form-control" />
            <span asp-validation-for="SLA" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="SearchText" class="control-label"></label>
            <input asp-for="SearchText" class="form-control" />
            <span asp-validation-for="SearchText" class="text-danger"></span>
        </div>
        <div class="form-group">
            <button type="button" id="savebtn" value="Create" class="btn btn-primary">Create</button>
            <button type="button" id="updatebtn" value="update" class="btn btn-primary">Update</button>
            <button type="button" id="loadOrder" value="update" class="btn btn-primary">Offset</button>
            <button type="button" id="orderDetail" value="update" class="btn btn-primary">Order detail</button>
            <button type="button" id="orderBid" value="update" class="btn btn-primary">Order bid</button>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <script>
        //chatting
        //var connection = new signalR.HubConnectionBuilder().withUrl("/bidHub").build();

        const options = {
            accessTokenFactory: getToken
        };

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/PtlHub", options)
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start();
        connection.on("loadPtlOrder", function (msg) {
            console.log(JSON.stringify(msg));
        });

        connection.on("myVendorRole", function (msg) {
            console.log('vendor');
        });

        connection.on("myCustomerRole", function (msg) {
            console.log('customer');
        });

        connection.on("loadPtlOrderDetail", function (msg) {
            console.log(JSON.stringify(msg));
        });

        connection.on("loadPtlOrderBidList", function (msg) {
            console.log(JSON.stringify(msg));
        });

        connection.on("addPtlOrderBid", function (msg) {
            console.log(JSON.stringify(msg));
        });

        connection.on("updatePtlOrderBid", function (msg) {
            console.log(JSON.stringify(msg));
        });


        //connection.on("UpdateBid", function (msg) {
        //    console.log(JSON.stringify(msg));
        //});

        //$('#savebtn').click(function () {
        //    let bidAmount = parseInt($("#BidAmount").val());
        //    let sla = parseInt($("#SLA").val());
        //    let message = $("#Message").val();

        //    let bid = { BidAmount: bidAmount, SLA: sla, Message: message};
        //    connection.invoke("PlaceBid", bid).catch(function (err) {
        //        return console.error(err.toString());
        //    });
        //});

        //$('#updatebtn').click(function () {
        //    let id = parseInt($("#Id").val());
        //    let bidAmount = parseInt($("#BidAmount").val());
        //    let sla = parseInt($("#SLA").val());
        //    let message = $("#Message").val();

        //    let bid = { BidAmount: bidAmount, SLA: sla, Message: message,Id:id  };
        //    connection.invoke("UpdateMyBid", bid).catch(function (err) {
        //        return console.error(err.toString());
        //    });
        //});

        $('#loadOrder').click(function () {
            let offSet = parseInt($("#offset").val());
            let searchText = $("#SearchText").val();

            let bid = { OffSet: offSet, SearchText: searchText };
            connection.invoke("LoadPtlCustomerOrderList", bid).catch(function (err) {
                return console.error(err.toString());
            });
        });

        $('#orderDetail').click(function () {
            let orderDetail = { OrderId: 265 };
            connection.invoke("LoadPtlCustomerOrderDetail", orderDetail).catch(function (err) {
                return console.error(err.toString());
            });
        });

        $('#orderBid').click(function () {
            let offSet = parseInt($("#offset").val());

            let bid = { OffSet: offSet, OrderId: 265 };
            connection.invoke("LoadPtlCustomerOrderBidList", bid).catch(function (err) {
                return console.error(err.toString());
            });
        });

        //get token
        function getToken() {
            return 'eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6IjQxNyIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6IlRydWNrQmhlam8uQ3VzdG9tZXIiLCJleHAiOjE2OTY1NzYyODAsImlzcyI6Imh0dHBzOi8vZGV2LmxvYWRub3cuaW8iLCJhdWQiOiJodHRwczovL2Rldi5sb2Fkbm93LmlvIn0.6grB0IAs7jd2i0N4FEEOqhW5RL6obJa-SuvrV35dtq0';

        }

    </script>
} *@